language: cpp

os:
  - linux
  - osx

install:
  - if [ -z "${TRAVIS_OS_NAME}" ]; then export TRAVIS_OS_NAME=linux; fi; # for our forks that do not have multi-os enabled.
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then travis_retry sudo apt-get update; travis_retry sudo apt-get install ocaml zlib1g-dev libgc-dev gcc-multilib g++-multilib -y; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then travis_retry brew update; travis_retry brew install ocaml camlp4; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then travis_retry git clone https://github.com/HaxeFoundation/neko.git ~/neko && cd ~/neko && make os=${TRAVIS_OS_NAME} && sudo make install && cd $TRAVIS_BUILD_DIR; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then travis_retry brew install neko --HEAD; fi
  - git clone --recursive https://github.com/HaxeFoundation/haxe.git ~/haxe && cd ~/haxe && make && make tools && sudo make install && cd $TRAVIS_BUILD_DIR
  - mkdir ~/haxelib && haxelib setup ~/haxelib
  - haxelib dev hxcpp $TRAVIS_BUILD_DIR

script:
  - cd ${TRAVIS_BUILD_DIR}/tools/run
  - haxe compile.hxml
  - cd ${TRAVIS_BUILD_DIR}/tools/hxcpp
  - haxe compile.hxml
  - cd ${TRAVIS_BUILD_DIR}/project
  - neko build.n -verbose
  - cd ${TRAVIS_BUILD_DIR}/test/ndlls
  - haxe compile.hxml && ./cpp/Test
  - haxe compile64.hxml && ./cpp64/Test
  - cd ${TRAVIS_BUILD_DIR}/test/haxe
  - haxe compile.hxml -debug && ./bin/TestMain-debug
  - cd ~/haxe/tests/unit
  - haxe compile-cpp.hxml && ./bin/cpp/Test-debug && rm -rf bin/cpp
  - haxe compile-cpp.hxml -D HXCPP_M64 && ./bin/cpp/Test-debug
